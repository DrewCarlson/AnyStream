name: Publish Release

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

concurrency:
  group: release-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  file-changes:
    runs-on: ubuntu-latest
    outputs:
      any: ${{ steps.check.outputs.any_changed }}
      docs: ${{ steps.docs.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Get changed files
        id: check
        uses: tj-actions/changed-files@v37
        with:
          files: |
            .github/workflows/release.yml
            build.gradle.kts
            gradle/*.versions.toml
            gradle/kotlin-js-store/**
            **/anystream-client-web/**
            **/anystream-client-ui/**
            **/anystream-client-core/**
            **/anystream-data-models/**
            **/anystream-server/**
            Dockerfile
            Dockerfile-local
      - name: Get changed files
        id: docs
        uses: tj-actions/changed-files@v37
        with:
          files: |
            .github/workflows/release.yml
            docs/**/**/*.md
            mkdocs.yml

  publish-docs:
    runs-on: ubuntu-latest
    needs: [ file-changes ]
    if: needs.file-changes.outputs.docs == 'true' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Get version
        uses: DrewCarlson/action-get-tag@v4
        with:
          strip_v: true
          env_var_name: AS_VERSION
      - uses: actions/checkout@v4
      - name: Deploy docs
        uses: mhausenblas/mkdocs-deploy-gh-pages@1.26
        env:
          REQUIREMENTS: docs/requirements.txt
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_DOMAIN: docs.anystream.dev
          CONFIG_FILE: mkdocs.yml

  build-and-push-server:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: [ file-changes ]
    if: needs.file-changes.outputs.any == 'true' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Cache Build files
        uses: actions/cache@v3
        with:
          path: |
            ~/.konan
            ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('gradle.properties') }}-v2

      - uses: gradle/gradle-build-action@v2
        name: Build Server and Web Client
        with:
          arguments: |
            :anystream-server:server-app:installShadowDist
            :anystream-server:server-app:shadowDistZip
            :anystream-server:server-app:shadowDistTar

      - name: Container registry Log in
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=ref,event=branch,enable=${{ startsWith(github.ref, 'refs/tags/v') == false }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile-local
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Upload build to Github Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref, '-') }}
          files: |
            anystream-server/server-app/build/dist/js/productionExecutable/*.zip
            anystream-server/server-app/build/dist/js/productionExecutable/*.tar
