name: Publish Release

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

concurrency:
  group: release-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  file-changes:
    runs-on: ubuntu-latest
    outputs:
      any: ${{ steps.check.outputs.any_changed }}
      docs: ${{ steps.docs.outputs.any_changed }}
    steps:
      - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Get changed files
        id: check
        uses: tj-actions/changed-files@3b04099b21072562f07469c10deb182b24236ca9
        with:
          files: |
            .github/workflows/release.yml
            build.gradle.kts
            gradle/*.versions.toml
            gradle/kotlin-js-store/**
            **/client/web/**
            **/client/ui/**
            **/client/core/**
            **/client/data-models/**
            **/server/**
            Dockerfile
            Dockerfile-local
      - name: Get changed files
        id: docs
        uses: tj-actions/changed-files@3b04099b21072562f07469c10deb182b24236ca9
        with:
          files: |
            .github/workflows/release.yml
            docs/**/**/*.md
            mkdocs.yml

  publish-docs:
    runs-on: ubuntu-latest
    needs: [ file-changes ]
    if: needs.file-changes.outputs.docs == 'true' || startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          fetch-depth: 0
      - name: Configure Git user
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55
        with:
          python-version: '3.8'
          architecture: x64
          cache: 'pip'
          cache-dependency-path: 'docs/requirements.txt'
      - name: Install Python dependencies
        run: python3 -m pip install -r ./docs/requirements.txt
      - name: Deploy with mike (release)
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF_NAME#v} mike deploy --update-aliases --push ${{ github.ref_name }} latest
      - name: Deploy with mike (snapshot)
        if: startsWith(github.ref, 'refs/tags/v') == false
        run: |
          VERSION=1.0.0-SNAPSHOT mike deploy --update-aliases --push v1.0.0-SNAPSHOT dev-snapshot

  build-and-push-server:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: [ file-changes ]
    if: needs.file-changes.outputs.any == 'true' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          submodules: 'recursive'

      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@06832c7b30a0129d7fb559bcc6e43d26f6374244

      - name: Cache Build files
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: |
            ~/.konan
            ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('gradle.properties') }}-v2

      - name: Build Server and Web Client
        run: >
          ./gradlew
          :server:application:installShadowDist
          :server:application:shadowDistZip
          :server:application:shadowDistTar

      - name: Container registry Log in
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=ref,event=branch,enable=${{ startsWith(github.ref, 'refs/tags/v') == false }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Build and push Docker image
        uses: docker/build-push-action@ccc2b40e9ea6518f9252a22a990f8e868370f62e
        with:
          context: .
          file: Dockerfile-local
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Upload build to Github Release
        uses: softprops/action-gh-release@fbadcc90e88ecface60a0a0d123795b784ceb239
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref, '-') }}
          files: |
            server/application/build/distributions/*.zip
            server/application/build/distributions/*.tar
