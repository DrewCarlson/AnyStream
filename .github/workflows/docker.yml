name: Publish Docker image

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  file-changes:
    runs-on: ubuntu-latest
    outputs:
      any: ${{ steps.check.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Get changed files
        id: check
        uses: tj-actions/changed-files@v17
        with:
          files: |
            build.gradle.kts
            gradle/libs.versions.toml
            gradle/kotlin-js-store/**
            **/*.kt
            **/*.kts
            **/anystream-client-web/**
            **/anystream-data-models/**
            **/anystream-data-core/**

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ file-changes ]
    if: needs.file-changes.outputs.any == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Cache Build files
        uses: actions/cache@v2
        with:
          path: |
            ~/.konan
            ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('gradle.properties') }}-v2

      - uses: gradle/gradle-build-action@v2
        name: Build Server and Web Client
        with:
          arguments: :anystream-server:installShadowDist :anystream-client-web:jsBrowserProductionWebpack

      - name: Container registry Log in
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile-local
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}